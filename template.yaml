AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  chorisma-app-backend

  Sample SAM Template for chorisma-app-backend

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
# CORS is enabled to allow requests from all resources. This is UNSAFE
# but to be fixed later
Globals:
  Api:
    Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'content-type'"
        AllowOrigin: "'*'"
  Function:
    Timeout: 120
    MemorySize: 1024

Resources:
  RecognizeChordFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      CodeUri: app/
      Architectures:
      - x86_64
      Policies:
        - S3FullAccessPolicy:
            BucketName: chorisma-app
      Events:
        RecognizeChord:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /recognize_chord
            Method: post
    Metadata:
      DockerTag: recognize_chord
      DockerContext: .
      Dockerfile: Dockerfile
  GetPresignedURLFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      CodeUri: app/
      Architectures:
      - x86_64
      Policies:
        - S3FullAccessPolicy:
            BucketName: chorisma-app
      Events:
        RecognizeChord:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /get_presigned_url
            Method: get
    Metadata:
      DockerTag: recognize_chord
      DockerContext: .
      Dockerfile: GetPresignedURL.Dockerfile
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  RecognizeChordApi:
    Description: API Gateway endpoint URL for Prod stage for RecognizeChord function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/recognize_chord/"
  RecognizeChordFunction:
    Description: RecognizeChord Lambda Function ARN
    Value: !GetAtt RecognizeChordFunction.Arn
  GetPresignedURLApi:
    Description: API Gateway endpoint URL for Prod stage for GetPresignedURL function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get_presigned_url/"
  GetPresignedURLFunction:
    Description: GetPresignedURL Lambda Function ARN
    Value: !GetAtt GetPresignedURLFunction.Arn